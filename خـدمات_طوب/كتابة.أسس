دالة أنشئ_فقاعة_كلام (نص: نـص، س: صحيح، ص: صحيح، زاوية: صحيح، بعد: صحيح): مـلصق {
    عرف سطور: مـصفوفة[نـص] = نص.قطع("\ج")؛

    // احسب حجم الكتابة.
    عرف ع: صحيح؛
    عرف ط: صحيح؛
    احسب_حجم_الكتابة(سطور، ع، ط)؛

    // احسب حجم الفقاعة.
    عرف _نسبة_: 1.1؛
    عرف نقع: صحيح = _نسبة_ * ع ÷ 1.414235؛
    عرف نقط: صحيح = _نسبة_ * ط ÷ 1.414235؛

    // احسب زاوية الامتداد
    عرف _النسبة_الثابتة_: 3.141592f64؛
    عرف ز: عائم[64] = _النسبة_الثابتة_ + (زاوية * _النسبة_الثابتة_ ÷ 180.0f64)؛

    // احسب بعد مركز الفقاعة عن مصدر الكلام.
    عرف بعد_س: صحيح = (نقع + بعد) * ريـاضيات.جتا(ز)؛
    عرف بعد_ص: صحيح = -(نقط + بعد) * ريـاضيات.جا(ز)؛

    // احسب حجم الملصق واحداثيات مركز الفقاعة.
    عرف ملصق_ع: صحيح؛
    عرف ملصق_ط: صحيح؛
    عرف مركز_س: صحيح؛
    عرف مركز_ص: صحيح؛
    إذا ريـاضيات.مطلق(بعد_س) <= نقع {
        ملصق_ع = نقع * 2 + 4؛
        مركز_س = نقع + 4؛
    } وإلا {
        ملصق_ع = ريـاضيات.مطلق(بعد_س) + نقع + 4؛
        إذا بعد_س < 0 مركز_س = -بعد_س وإلا مركز_س = نقع؛
    }
    إذا ريـاضيات.مطلق(بعد_ص) <= نقط {
        ملصق_ط = نقط * 2 + 4؛
        مركز_ص = نقط + 4؛
    } وإلا {
        ملصق_ط = ريـاضيات.مطلق(بعد_ص) + نقط + 4؛
        إذا بعد_ص < 0 مركز_ص = -بعد_ص وإلا مركز_ص = نقط؛
    }

    // كبر الملصق قليلا للحالات غير المتوقعة.
    ملصق_ع += 32؛
    ملصق_ط += 32؛
    مركز_س += 16؛
    مركز_ص += 16؛

    // احسب زاوية بداية قوس الفقاعة.
    عرف _زاوية_النتوء_: 0.12f64؛
    عرف زاوية_بداية_النتوء: عائم[64] = ز + _زاوية_النتوء_؛

    // جهز إحداثيات الرسم.
    عرف نقاط_س: مـصفوفة[صحيح[16]]({ مركز_س + بعد_س })؛
    عرف نقاط_ص: مـصفوفة[صحيح[16]]({ مركز_ص + بعد_ص })؛
    عرف خطوة: عائم[64] = (_النسبة_الثابتة_ * 2 - _زاوية_النتوء_ * 2) ÷ 32.0f64؛
    عرف ه: صحيح؛
    لكل (ز = زاوية_بداية_النتوء، ه = 0)، ه < 32، (++ه، ز += خطوة) {
        نقاط_س.أضف(مركز_س + ريـاضيات.جتا(ز) * نقع)؛
        نقاط_ص.أضف(مركز_ص - ريـاضيات.جا(ز) * نقط)؛
    }
    نقاط_س.أضف(مركز_س + بعد_س)؛
    نقاط_ص.أضف(مركز_ص + بعد_ص)؛

    // ارسم الفقاعة.
    عرف _قناع_أحمر_: 0x000000FF؛
    عرف _قناع_أخضر_: 0x0000FF00؛
    عرف _قناع_أزرق_: 0x00FF0000؛
    عرف _قناع_شفافية_: 0xFF000000؛
    عرف سطح: مؤشر[طـوب.سـطح](طـوب.سـطح.أنشئ(0، ملصق_ع، ملصق_ط، 32، _قناع_أحمر_، _قناع_أخضر_، _قناع_أزرق_، _قناع_شفافية_))؛
    عرف رسام: مؤشر[طـوب.رسـام](طـوب.رسـام.أنشئ(سطح))؛
    ارسم_شكلا_مؤطرا(رسام، نقاط_س، نقاط_ص)؛
    اكتب_سطور(رسام، سطور، مركز_س + ع÷2، مركز_ص - ط÷2)؛
    طـوب.رسـام.أتلف(رسام)؛

    // أنشئ ملصق الفقاعة.
    عرف فقاعة: مـلصق(سـندنا[نـقش_متعدد]().{ احجز()~هيئ(سطح) })؛
    فقاعة.ضع(س - مركز_س - بعد_س، ص - مركز_ص - بعد_ص)؛

    // بعد أن أنشأنا الملصق ونقشه لم نعد بحاجة لهذا السطح.
    طـوب.سـطح.حرر(سطح)؛

    أرجع فقاعة؛
}


دالة أنشئ_فقاعة_كلام_مخصصة (
    نص: نـص، اسم_ملف_الصورة: نـص، س: صحيح، ص: صحيح، س_مركز_الكتابة: صحيح، ص_مركز_الكتابة: صحيح
): سـندنا[مـؤجلات.مـؤجلة[مـلصق]] {
    عرف سطور: مـصفوفة[نـص] = نص.قطع("\ج")؛

    عرف نقش: نـقش_متعدد(اسم_ملف_الصورة)؛
    عرف فقاعة: مـلصق(نقش.عرض، نقش.طول)؛

    // احسب حجم الكتابة.
    عرف ع: صحيح؛
    عرف ط: صحيح؛
    احسب_حجم_الكتابة(سطور، ع، ط)؛

    // اكتب السطور.
    ابدأ_رسم_النقش(فقاعة، 1)؛
    نقش.اطمغ(0، 0، 255، 0)؛
    اكتب_سطور(الرسام، سطور، س_مركز_الكتابة + ع÷2، ص_مركز_الكتابة - ط÷2)؛
    أنه_رسم_النقش()؛

    فقاعة.ضع(س، ص)؛

    أرجع مـؤجلات.مـؤجلة[مـلصق].أنشئ().{ قرر(فقاعة) }؛
}


دالة أنشئ_فقاعة_تفكير (نص: نـص، س: صحيح، ص: صحيح، زاوية: صحيح، بعد: صحيح): مـلصق {
    عرف سطور: مـصفوفة[نـص] = نص.قطع("\ج")؛

    // احسب حجم الكتابة.
    عرف ع: صحيح؛
    عرف ط: صحيح؛
    احسب_حجم_الكتابة(سطور، ع، ط)؛

    // احسب حجم الفقاعة.
    عرف _نسبة_: 1.1؛
    عرف نقع: صحيح = _نسبة_ * ع ÷ 1.414235؛
    عرف نقط: صحيح = _نسبة_ * ط ÷ 1.414235؛

    // احسب زاوية الامتداد
    عرف _النسبة_الثابتة_: 3.141592f64؛
    عرف ز: عائم[64] = _النسبة_الثابتة_ + (زاوية * _النسبة_الثابتة_ ÷ 180.0f64)؛

    // احسب بعد مركز الفقاعة عن مصدر الكلام.
    عرف بعد_س: صحيح = (نقع + بعد) * ريـاضيات.جتا(ز)؛
    عرف بعد_ص: صحيح = -(نقط + بعد) * ريـاضيات.جا(ز)؛

    // احسب حجم الملصق واحداثيات مركز الفقاعة.
    عرف ملصق_ع: صحيح؛
    عرف ملصق_ط: صحيح؛
    عرف مركز_س: صحيح؛
    عرف مركز_ص: صحيح؛
    إذا ريـاضيات.مطلق(بعد_س) <= نقع {
        ملصق_ع = نقع * 2 + 4؛
        مركز_س = نقع + 4؛
    } وإلا {
        ملصق_ع = ريـاضيات.مطلق(بعد_س) + نقع + 4؛
        إذا بعد_س < 0 مركز_س = -بعد_س وإلا مركز_س = نقع؛
    }
    إذا ريـاضيات.مطلق(بعد_ص) <= نقط {
        ملصق_ط = نقط * 2 + 4؛
        مركز_ص = نقط + 4؛
    } وإلا {
        ملصق_ط = ريـاضيات.مطلق(بعد_ص) + نقط + 4؛
        إذا بعد_ص < 0 مركز_ص = -بعد_ص وإلا مركز_ص = نقط؛
    }

    // كبر الملصق قليلا للحالات غير المتوقعة.
    ملصق_ع += 32؛
    ملصق_ط += 32؛
    مركز_س += 16؛
    مركز_ص += 16؛

    عرف خطوة: عائم[64] = (_النسبة_الثابتة_ * 2) ÷ 32.0f64؛
    عرف _قناع_أحمر_: 0x000000FF؛
    عرف _قناع_أخضر_: 0x0000FF00؛
    عرف _قناع_أزرق_: 0x00FF0000؛
    عرف _قناع_شفافية_: 0xFF000000؛
    عرف سطح: مؤشر[طـوب.سـطح](طـوب.سـطح.أنشئ(0، ملصق_ع، ملصق_ط، 32، _قناع_أحمر_، _قناع_أخضر_، _قناع_أزرق_، _قناع_شفافية_))؛
    عرف رسام: مؤشر[طـوب.رسـام](طـوب.رسـام.أنشئ(سطح))؛

    عرف نقاط_س: مـصفوفة[صحيح[16]]()؛
    عرف نقاط_ص: مـصفوفة[صحيح[16]]()؛

    // ارسم الفقيعات.
    عرف ه: صحيح؛
    لكل ه = 0، ه < 2، ++ه {
        عرف مركز_فقيعة_س: صحيح = مركز_س + بعد_س - (10 + ه * بعد * 0.5) * ريـاضيات.جتا(ز)؛
        عرف مركز_فقيعة_ص: صحيح = مركز_ص + بعد_ص + (10 + ه * بعد * 0.5) * ريـاضيات.جا(ز)؛
        نقاط_س.فرغ()؛
        نقاط_ص.فرغ()؛
        عرف ه2: صحيح؛
        لكل ه2 = 0، ه2 < 32، (++ه2، ز += خطوة) {
            نقاط_س.أضف(مركز_فقيعة_س + ريـاضيات.جتا(ز) * (8 + ه * بعد * 0.15))؛
            نقاط_ص.أضف(مركز_فقيعة_ص - ريـاضيات.جا(ز) * (8 + ه * بعد * 0.15))؛
        }
        نقاط_س.أضف(مركز_فقيعة_س + ريـاضيات.جتا(ز) * (8 + ه * بعد * 0.15))؛
        نقاط_ص.أضف(مركز_فقيعة_ص - ريـاضيات.جا(ز) * (8 + ه * بعد * 0.15))؛
        ارسم_شكلا_مؤطرا(رسام، نقاط_س، نقاط_ص)؛
    }

    // ارسم فقاعة الكلام.
    نقاط_س.فرغ()؛
    نقاط_ص.فرغ()؛
    لكل ه = 0، ه < 32، (++ه، ز += خطوة) {
        نقاط_س.أضف(مركز_س + ريـاضيات.جتا(ز) * نقع)؛
        نقاط_ص.أضف(مركز_ص - ريـاضيات.جا(ز) * نقط)؛
    }
    نقاط_س.أضف(مركز_س + ريـاضيات.جتا(ز) * نقع)؛
    نقاط_ص.أضف(مركز_ص - ريـاضيات.جا(ز) * نقط)؛

    // ارسم الفقاعة.
    ارسم_شكلا_مؤطرا(رسام، نقاط_س، نقاط_ص)؛
    اكتب_سطور(رسام، سطور، مركز_س + ع÷2، مركز_ص - ط÷2)؛
    طـوب.رسـام.أتلف(رسام)؛

    // أنشئ ملصق الفقاعة.
    عرف فقاعة: مـلصق(سـندنا[نـقش_متعدد]().{ احجز()~هيئ(سطح) })؛
    فقاعة.ضع(س - مركز_س - بعد_س، ص - مركز_ص - بعد_ص)؛

    // بعد أن أنشأنا الملصق ونقشه لم نعد بحاجة لهذا السطح.
    طـوب.سـطح.حرر(سطح)؛

    أرجع فقاعة؛
}


دالة أنشئ_نافذة_كلام (نص: نـص، س: صحيح، ص: صحيح): مـلصق {
    عرف سطور: مـصفوفة[نـص] = نص.قطع("\ج")؛

    // احسب حجم الكتابة.
    عرف ع: صحيح؛
    عرف ط: صحيح؛
    احسب_حجم_الكتابة(سطور، ع، ط)؛

    // احسب حجم الملصق ومركزه.
    عرف ملصق_ع: صحيح = ع + 20؛
    عرف ملصق_ط: صحيح = ط + 20؛
    عرف مركز_س: صحيح = ملصق_ع ÷ 2؛
    عرف مركز_ص: صحيح = ملصق_ط ÷ 2؛

    عرف _قناع_أحمر_: 0x000000FF؛
    عرف _قناع_أخضر_: 0x0000FF00؛
    عرف _قناع_أزرق_: 0x00FF0000؛
    عرف _قناع_شفافية_: 0xFF000000؛
    عرف سطح: مؤشر[طـوب.سـطح](طـوب.سـطح.أنشئ(0، ملصق_ع، ملصق_ط، 32، _قناع_أحمر_، _قناع_أخضر_، _قناع_أزرق_، _قناع_شفافية_))؛
    عرف رسام: مؤشر[طـوب.رسـام](طـوب.رسـام.أنشئ(سطح))؛

    // ارسم نافذة الكلام.
    عرف نقاط_س: مـصفوفة[صحيح[16]]()؛
    عرف نقاط_ص: مـصفوفة[صحيح[16]]()؛
    نقاط_س.أضف(مركز_س + ع ÷ 2 + 10)؛ نقاط_ص.أضف(مركز_ص + ط ÷ 2 + 10)؛
    نقاط_س.أضف(مركز_س + ع ÷ 2 + 10)؛ نقاط_ص.أضف(مركز_ص - ط ÷ 2 - 10)؛
    نقاط_س.أضف(مركز_س - ع ÷ 2 - 10)؛ نقاط_ص.أضف(مركز_ص - ط ÷ 2 - 10)؛
    نقاط_س.أضف(مركز_س - ع ÷ 2 - 10)؛ نقاط_ص.أضف(مركز_ص + ط ÷ 2 + 10)؛
    نقاط_س.أضف(مركز_س + ع ÷ 2 + 10)؛ نقاط_ص.أضف(مركز_ص + ط ÷ 2 + 10)؛
    ارسم_شكلا_مؤطرا(رسام، نقاط_س، نقاط_ص)؛
    اكتب_سطور(رسام، سطور، مركز_س + ع÷2، مركز_ص - ط÷2)؛
    طـوب.رسـام.أتلف(رسام)؛

    // تأكد من عدم خروج الملصق من حدود الشاشة.
    إذا س + ملصق_ع ÷ 2 >= _عرض_النافذة_ س = _عرض_النافذة_ - ملصق_ع
    وإلا إذا س - ملصق_ع ÷ 2 < 0 س = 0
    وإلا س -= ملصق_ع ÷ 2؛

    إذا ص + ملصق_ط ÷ 2 >= _طول_النافذة_ س = _طول_النافذة_ - ملصق_ط
    وإلا إذا ص - ملصق_ط ÷ 2 < 0 ص = 0
    وإلا ص -= ملصق_ط ÷ 2؛

    // أنشئ ملصق النافذة.
    عرف نافذة: مـلصق(سـندنا[نـقش_متعدد]().{ احجز()~هيئ(سطح) })؛
    نافذة.ضع(س، ص)؛

    // بعد أن أنشأنا الملصق ونقشه لم نعد بحاجة لهذا السطح.
    طـوب.سـطح.حرر(سطح)؛

    أرجع نافذة؛
}


دالة ارسم_شكلا_مؤطرا (نقاط: مـصفوفة[صحيح]) {
    عرف نقاط_س: مـصفوفة[صـحيح[16]]؛
    عرف نقاط_ص: مـصفوفة[صـحيح[16]]؛
    عرف ع: صـحيح؛
    لكل ع = 0، ع < نقاط.هات_الطول()، ع += 2 {
        نقاط_س.أضف(نقاط(ع))؛
        نقاط_ص.أضف(نقاط(ع + 1))؛
    }
    ارسم_شكلا_مؤطرا(الرسام، نقاط_س، نقاط_ص)؛
}


دالة ارسم_شكلا_مؤطرا (نقاط_س: مـصفوفة[صحيح[16]]، نقاط_ص: مـصفوفة[صحيح[16]]) {
    ارسم_شكلا_مؤطرا(الرسام، نقاط_س، نقاط_ص)؛
}


دالة ارسم_شكلا_مؤطرا (رسام: مؤشر[طـوب.رسـام]، نقاط_س: مـصفوفة[صحيح[16]]، نقاط_ص: مـصفوفة[صحيح[16]]) {
    طـوب.رسـم.مضلع_مليء(رسام، نقاط_س.صوان~مؤشر، نقاط_ص.صوان~مؤشر، نقاط_س.هات_الطول()، طـوب.لـون(255، 255، 255، 255))؛
    عرف ن: صحيح؛
    لكل ن = 0، ن < نقاط_س.هات_الطول() - 1، ++ن {
        طـوب.رسـم.خط(رسام، نقاط_س(ن)، نقاط_ص(ن)، نقاط_س(ن+1)، نقاط_ص(ن+1)، 2، طـوب.لـون(50، 50، 50، 255))؛
    }
}


دالة احسب_حجم_الكتابة (سطور: مـصفوفة[نـص]، عرض: سند[صحيح]، طول: سند[صحيح]) {
    عرض = طول = 0؛
    عرف مستطيل: طـوب.مـستطيل؛
    عرف م: صحيح؛
    لكل م = 0، م < سطور.هات_الطول()، ++م {
        طـوب.كـتابة.احسب_حجم_الكتابة(سطور(م)، خط_فقاعات_الكلام، 1، مستطيل~مؤشر)؛
        طول += مستطيل.ط + 10؛
        إذا مستطيل.ع > عرض { عرض = مستطيل.ع }؛
    }
}


دالة اكتب_سطور (سطور: مـصفوفة[نـص]، س: صحيح، ص: صحيح) {
    اكتب_سطور(الرسام، سطور، س، ص، طـوب.لـون(0، 0، 0، 255))؛
}

دالة اكتب_سطور (سطور: مـصفوفة[نـص]، س: صحيح، ص: صحيح، لون: طـوب.لـون) {
    اكتب_سطور(الرسام، سطور، س، ص، لون)؛
}

دالة اكتب_سطور (رسام: مؤشر[طـوب.رسـام]، سطور: مـصفوفة[نـص]، س: صحيح، ص: صحيح) {
    اكتب_سطور(رسام، سطور، س، ص، طـوب.لـون(0، 0، 0، 255))؛
}

دالة اكتب_سطور (رسام: مؤشر[طـوب.رسـام]، سطور: مـصفوفة[نـص]، س: صحيح، ص: صحيح، لون: سند[لـون]) {
    عرف مستطيل: طـوب.مـستطيل؛
    عرف م: صحيح؛
    لكل م = 0، م < سطور.هات_الطول()، ++م {
        طـوب.كـتابة.احسب_حجم_الكتابة(سطور(م)، خط_فقاعات_الكلام، 1، مستطيل~مؤشر)؛
        طـوب.كـتابة.اكتب(سطور(م)، لون~مؤشر، خط_فقاعات_الكلام، 1، س - مستطيل.ع، ص + 5، رسام)؛
        ص += مستطيل.ط + 10؛
    }
}
